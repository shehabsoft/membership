
enum Gender {
    MALE, FEMALE
}


entity MembershipStatus {
    name String required
    description String 
}


entity MembershipCategory {
    name String required
    description String 
}

entity MembershipType {
    name String required
    description String 
}

entity MembershipLevel {
    name String required
    description String 
}

entity Member {
    firstName String required
    lastName String required
    civilId String required
    birthDate Instant required
    email String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/)
    phone  String required
    address1 String required
    address2 String 
    city String
    country String
	salary Double 
    gender Gender required
}
entity MemberFiles
{
  fileName  String required
  fileType  String required
  fileContent Blob  required
}

relationship OneToMany {
	Member {memberFiles} to MemberFiles
}

relationship ManyToOne {
	Member{membershipStatus(name) required} to MembershipStatus
}

relationship ManyToOne {
	Member{membershipCategory(name) required} to MembershipCategory
}

relationship ManyToOne {
	Member{membershipType(name) required} to MembershipType
}

relationship ManyToOne {
	Member{membershipLevel(name) required} to MembershipLevel
}
paginate all with pagination
dto * with mapstruct
service all with serviceImpl